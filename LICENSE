// pages/api/index.js

import { IncomingForm } from 'formidable';
import fs from 'fs';
import csv from 'csv-parser';

export const config = {
  api: {
    bodyParser: false,
  },
};

export default async function handler(req, res) {
  if (req.method === 'POST') {
    const form = new IncomingForm();
    form.uploadDir = './uploads';
    form.keepExtensions = true;

    form.parse(req, async (err, fields, files) => {
      if (err) {
        return res.status(500).json({ error: 'File parsing error.' });
      }

      const question = fields.question;
      const file = files.file;

      if (!question) {
        return res.status(400).json({ error: 'Question is required.' });
      }

      if (file && file.filepath) {
        const filePath = file.filepath;
        const results = [];

        try {
          fs.createReadStream(filePath)
            .pipe(csv())
            .on('data', (data) => results.push(data))
            .on('end', () => {
              const answer = results.find(row => row.answer)?.answer || 'Answer column not found.';
              res.status(200).json({ answer });

              // Clean up uploaded file
              fs.unlinkSync(filePath);
            });
        } catch (error) {
          return res.status(500).json({ error: 'Error processing file.' });
        }
      } else {
        res.status(200).json({ answer: 'No file provided. Please upload a file if required.' });
      }
    });
  } else {
    res.status(405).json({ error: 'Method not allowed.' });
  }
}
